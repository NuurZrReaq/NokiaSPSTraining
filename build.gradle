plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.nokiaspstraining'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

repositories {
	mavenCentral()
}

configurations {
	jaxb
}

bootJar {
	archiveBaseName = 'gs-producing-web-service'
	archiveVersion =  '0.1.0'
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'wsdl4j:wsdl4j'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.projectlombok:lombok:1.18.16'
	runtimeOnly 'com.h2database:h2'
	jaxb("org.glassfish.jaxb:jaxb-xjc")
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	compile('javax.xml.bind:jaxb-api:2.3.0')
	compile('javax.activation:activation:1.1')
	compile('org.glassfish.jaxb:jaxb-runtime:2.3.0')
	compile ("com.aerospike:aerospike-client:5.0.0")

	compile group: 'com.aerospike', name: 'spring-data-aerospike', version: '2.4.0.RELEASE'
	compile (group: 'org.springframework', name: 'spring-test', version: '4.3.0.RELEASE')
	implementation 'org.hibernate.validator:hibernate-validator:6.1.2.Final'



}

test {
	useJUnitPlatform()
}
sourceSets {
	main {
		java {
			srcDir 'src/main/java'
			srcDir 'build/generated-sources/jaxb'
		}
	}
}

task genJaxb {
	ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
	ext.schema = "src/main/resources/userSchema.xsd"

	outputs.dir sourcesDir

	doLast() {
		project.ant {
			taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
					classpath: configurations.jaxb.asPath
			mkdir(dir: sourcesDir)

			xjc(destdir: sourcesDir, schema: schema) {
				arg(value: "-wsdl")
				produces(dir: sourcesDir, includes: "**/*.java")
			}
		}
	}
}

compileJava.dependsOn genJaxb
